// Generated by CoffeeScript 1.8.0
var ref;

ref = new Firebase("https://question-everything.firebaseio.com");

ref.authAnonymously(function(err, data) {
  var renderQuestion;
  renderQuestion = function(link, previous) {
    var getNextQ;
    if (link == null) {
      link = "head/0";
    }
    if (previous == null) {
      previous = false;
    }
    async.waterfall([]);
    getNextQ = function(finish) {
      if (link) {
        return ref.child(link).once('value', function(doc) {
          return finish(doc);
        });
      } else {
        return finish(null);
      }
    };
    return getNextQ(function(doc) {
      var $question, answer_1, answer_2, question, _ref;
      _ref = (doc != null ? doc.val() : void 0) || {}, question = _ref.question, answer_1 = _ref.answer_1, answer_2 = _ref.answer_2;
      $question = $('body > .question');
      if (question && answer_1 && answer_2) {
        $question.html(teacup.render(function() {
          div('.question', function() {
            return question;
          });
          return div('.answers', function() {
            div('.answer_1', {
              'data-next': answer_1.next
            }, function() {
              return answer_1.text;
            });
            return div('.answer_2', {
              'data-next': answer_2.next
            }, function() {
              return answer_2.text;
            });
          });
        }));
        return $question.find('.answers > div').on('click', function(e) {
          var $el, next;
          $el = $(e.currentTarget);
          next = $el.data('next');
          return renderQuestion(next, "" + link + "/" + ($el.attr('class')));
        });
      } else {
        $question.html(teacup.render(function() {
          return form(function() {
            input('.question', {
              placeholder: "Add your own question to keep it going!",
              required: true
            });
            div('.answers', function() {
              input('.answer_1', {
                placeholder: 'Put answer one here',
                required: true
              });
              return input('.answer_2', {
                placeholder: 'Put answer two here',
                required: true
              });
            });
            return input({
              type: 'submit',
              value: 'submit'
            });
          });
        }));
        console.log("" + previous + "/next");
        return $question.find('form').on('submit', function(e) {
          var $el, new_q;
          $el = $(e.currentTarget);
          $el.find('input').each(function(index, value) {});
          new_q = ref.child('leaf').push();
          new_q.set({
            answer_1: {
              text: $el.find('input.answer_1').val()
            },
            answer_2: {
              text: $el.find('input.answer_2').val()
            },
            question: $el.find('input.question').val()
          }, function() {
            var question_location;
            question_location = "leaf/" + (new_q.key());
            return ref.child("" + previous + "/next").set(question_location, function() {
              return renderQuestion(question_location);
            });
          });
          return false;
        });
      }
    });
  };
  return renderQuestion();
});
